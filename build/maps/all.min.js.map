{"version":3,"sources":["isInViewport.js","main.js"],"names":["isElementInView","element","box","getBoundingClientRect","doc","document","documentElement","prerequisite1","top","left","prerequisite2","bottom","window","innerHeight","clientHeight","prerequisite3","right","innerWidth","clientWidth","hasAnimeClassAll","elArr","className","hasClassName","i","length","match","addAnimeClassAll","recursion","recursiveCall","console","log","addEventListener","test","this","removeEventListener","allCircles","querySelectorAll","section2","querySelector"],"mappings":"AAKA,QAAAA,iBAAAC,GAEA,GAAAC,GAAAD,EAAAE,wBACAC,EAAAC,SAAAC,gBACAC,EAAAL,EAAAM,KAAA,GAAAN,EAAAO,MAAA,EACAC,EAAAR,EAAAS,SAAAC,OAAAC,aAAAT,EAAAU,cACAC,EAAAb,EAAAc,QAAAJ,OAAAK,YAAAb,EAAAc,YAEA,OAAAX,MAAA,GAAAG,KAAA,GAAAK,KAAA,GACA,GAEA,GChBA,WAUA,QAAAI,GAAAC,EAAAC,GAEA,IAAA,GADAC,GAAA,EACAC,EAAAH,EAAAI,OAAA,EAAAD,GAAA,EAAAA,IACAH,EAAAG,GAAAF,UAAAI,MAAAJ,KACAC,GAAA,EAGA,OAAAA,KAAAF,EAAAI,QAEA,GAEA,EASA,QAAAE,GAAAN,EAAAC,GACA,IAAAF,EAAAC,EAAAC,GAAA,CAGA,GAAAM,GAAA,GAGA,QAAAC,KACAC,QAAAC,IAAA,mBACAV,EAAAO,GAAAN,WAAA,IAAAA,EACAD,EAAAO,GAAAI,iBAAA,eAAA,QAAAC,KACAL,IAAAP,EAAAI,OAAA,IACAK,QAAAC,IAAA,aAAAV,EAAAO,GAAA,gBAAAN,EAAA,eAAAM,GACAA,GAAA,EACAC,KAEAK,KAAAC,oBAAA,eAAAF,GACAH,QAAAC,IAAA,0BA9CA,GAAAK,GAAA9B,SAAA+B,iBAAA,gBACAC,EAAAhC,SAAAiC,cAAA,YAmDA1B,QAAAmB,iBAAA,SAAA,WACAF,QAAAC,IAAA,sBACA9B,gBAAAqC,IACAX,EAAAS,EAAA","file":"all.min.js","sourcesContent":["/**\r\n * [isElementInView description]\r\n * @param  {[object]}  element [the element to determine if in view port]\r\n * @return {Boolean}           [is the element in the view port]\r\n */\r\nfunction isElementInView(element) {\r\n\t//code written for readability\r\n\tvar box = element.getBoundingClientRect();\r\n\tvar doc = document.documentElement;\r\n\tvar prerequisite1 = (box.top >= 0 && box.left >= 0);\r\n\tvar prerequisite2 = ( box.bottom <= (window.innerHeight || doc.clientHeight) );\r\n\tvar prerequisite3 = ( box.right <= (window.innerWidth || doc.clientWidth) );\r\n\t\r\n\tif( prerequisite1 === true && prerequisite2 === true && prerequisite3 === true ){\r\n\t\treturn true;\r\n\t}else{\r\n\t\treturn false;\r\n\t}\r\n}","(function(){\r\n\tvar allCircles = document.querySelectorAll('.circle-imgs');\r\n\tvar section2   = document.querySelector('.section2');\r\n\t\r\n\t/**\r\n\t * [checks if elements in array have the supplied anime class name]\r\n\t * @param  {[array]}  elArr     [array of DOM elements]\r\n\t * @param  {[string]} className [class name(s) to add to element]\r\n\t * @return {Boolean}            [if all elements in the array have the supplied class name]\r\n\t */\r\n\tfunction hasAnimeClassAll(elArr,className){\r\n\t\tvar hasClassName = 0;\r\n\t\tfor (var i = elArr.length - 1; i >= 0; i--) {\r\n\t\t\tif(elArr[i].className.match(className)){\r\n\t\t\t\thasClassName += 1;\r\n\t\t\t}\r\n\t\t};\r\n\t\tif(hasClassName === elArr.length){\r\n\t\t\t//all elements in elArr array have the className\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [adds the supplied class name to each element in array]\r\n\t * @param {[array]} elArr     [array of DOM elements]\r\n\t * @param {[type]} className  [class name(s) to add to element]\r\n\t */\r\n\tfunction addAnimeClassAll(elArr,className){\r\n\t\tif(!hasAnimeClassAll(elArr,className)){\r\n\t\t\t//number of times recursiveCall fn is called\r\n\t\t\t//and creates an exit condition for recursiveCall\r\n\t\t\tvar recursion = 0;\r\n\r\n\t\t\t//called each time an animation ends which creates an animation stagger\r\n\t\t\t(function recursiveCall(){\r\n\t\t\t\tconsole.log('recursiveCalled');\r\n\t\t\t\telArr[recursion].className += ' '+className;\r\n\t\t\t\telArr[recursion].addEventListener('animationend',function test(){\r\n\t\t\t\t\tif(recursion !== (elArr.length -1) ){\r\n\t\t\t\t\t\tconsole.log('elements: ',elArr[recursion],' class name: ',className,' recursion: ',recursion);\r\n\t\t\t\t\t\trecursion+=1;\r\n\t\t\t\t\t\trecursiveCall();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.removeEventListener('animationend',test);\r\n\t\t\t\t\tconsole.log('trans event over');\r\n\t\t\t\t});\r\n\t\t\t})();\r\n\t\t}\r\n\t}\r\n\r\n\twindow.addEventListener('scroll',function(){\r\n\t\tconsole.log('scroll is working!');\r\n\t\tif(isElementInView(section2)){\r\n\t\t\taddAnimeClassAll(allCircles,'inView');\r\n\t\t}\r\n\t});\r\n})();"],"sourceRoot":"/source/"}